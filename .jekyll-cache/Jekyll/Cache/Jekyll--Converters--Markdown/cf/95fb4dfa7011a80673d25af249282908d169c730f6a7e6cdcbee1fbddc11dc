I"6<p><em>개인적으로 정리한 내용을 기록한 글입니다. <a href="https://be-beee.tistory.com">티스토리 블로그</a>의 글을 마크다운 형식으로 재작성하였습니다.</em> <br /><br /></p>

<p>Alert를 구현하기 위해서는 다음과 같은 단계가 필요하다.</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="p">1.</span> AlertController 타입 변수 생성
<span class="p">2.</span> AlertAction 타입 변수 생성
<span class="p">3.</span> AlertController.addAction(AlertAction)
<span class="p">4.</span> self.present()로 alert 표시</code></pre></figure>

<p><br />
<br /></p>

<h2 id="uialertcontroller-변수-생성하기">UIAlertController 변수 생성하기</h2>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="k">let</span> <span class="nv">alert</span> <span class="o">=</span> <span class="kt">UIAlertController</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="kc">nil</span><span class="p">,</span> <span class="nv">message</span><span class="p">:</span> <span class="s">"메시지"</span><span class="p">,</span> <span class="nv">preferredStyle</span><span class="p">:</span> <span class="o">.</span><span class="n">alert</span><span class="p">)</span></code></pre></figure>

<p>preferredStyle은 alert, actionSheet 두 가지가 존재하며 각각 다음과 같이 표시된다.</p>
<div style="text-align: center;">
	<img src="/images/20200418_5/alert_type.png" width="80%" />
</div>
<p><br />
<br /></p>

<h2 id="uialertaction-변수-생성하기">UIAlertAction 변수 생성하기</h2>
<p>다음으로 UIAlertAction 변수를 생성하여 AlertController에 액션을 추가한다. 추가한 액션 수에 따라 Alert의 형태가 달라질 수 있고, 사용자가 각 액션을 선택했을 때 호출되는 클로저를 작성할 수 있다.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="k">let</span> <span class="nv">ok</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"확인"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="k">default</span><span class="p">)</span> <span class="p">{</span> <span class="p">(</span><span class="n">action</span><span class="p">)</span> <span class="k">in</span>
        <span class="c1">// 확인 버튼을 눌렀을 때 실행할 코드</span>
<span class="p">}</span>
<span class="k">let</span> <span class="nv">cancel</span> <span class="o">=</span> <span class="kt">UIAlertAction</span><span class="p">(</span><span class="nv">title</span><span class="p">:</span> <span class="s">"취소"</span><span class="p">,</span> <span class="nv">style</span><span class="p">:</span> <span class="o">.</span><span class="n">cancel</span><span class="p">,</span> <span class="nv">handler</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span>

<span class="n">alert</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">ok</span><span class="p">)</span>
<span class="n">alert</span><span class="o">.</span><span class="nf">addAction</span><span class="p">(</span><span class="n">cancel</span><span class="p">)</span></code></pre></figure>

<p><code class="language-plaintext highlighter-rouge">handler:</code> 부에 원하는 클로저를 작성하거나 메서드 이름을 매개변수로 기입할 수있다. style의 경우 <code class="language-plaintext highlighter-rouge">.default</code>, <code class="language-plaintext highlighter-rouge">.cancel</code>, <code class="language-plaintext highlighter-rouge">.destructive</code>의 세 종류 중 하나를 입력할 수있다. 각각의 스타일은 다음의 경우 사용할 수 있다.</p>

<figure class="highlight"><pre><code class="language-markdown" data-lang="markdown"><span class="p">-</span> .default: 액션 버튼에 기본적인 스타일을 적용할 때 (기본)
<span class="p">-</span> .cancel: 원하는 명령을 취소하거나 데이터 또는 화면을 변하지 않은 상태로 둘 때, 이 스타일을 사용할 경우 주로 handler: 부에 nil을 넣는다.
<span class="p">-</span> .destructive: 화면에 변화가 있거나 데이터를 삭제하고자 할 때</code></pre></figure>

<p>해당하는 상황에 따라 적절한 스타일을 적용함으로써 사용자에게 행위에 따른 경각심을 줄 수 있다.
<br />
<br /></p>

<h2 id="selfpresent-호출하기">self.present() 호출하기</h2>
<p>마지막으로 present() 메서드를 호출하여 생성한 Alert를 화면에 표시하도록 한다.</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="k">self</span><span class="o">.</span><span class="nf">present</span><span class="p">(</span><span class="n">alert</span><span class="p">,</span> <span class="nv">animated</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nv">completion</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span></code></pre></figure>

<p>출처: https://be-beee.tistory.com/12?category=849772 [iOS 개발 도전기‍]</p>
:ET